/**
 * angular-reports
 * @version v0.0.1 - 2015-03-21
 * @link https://github.com/rkori215/angular-reports
 * @author  <>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
var angularReports=angular.module("angularReports",[]);angular.forEach(function(a){var b="ng"+a[0].toUpperCase()+a.slice(1);angularReports.directive(b,function(){return function(c,d,e){e.$observe(b,function(b){e.$set(a,b)})}})}),angularReports.directive("angularReports",[function(){return{restrict:"E",replace:!0,transclude:!1,template:"<div id='{{chartId}}' class='angularReports'><svg angular-reports={{type}}></svg></div>",scope:{attr_xValues:"@xvalues",attr_yValues:"@yvalues",attr_margin:"@margin",attr_type:"@type",attr_title:"@title",attr_resize:"@resize"},controller:function(a){a.chartId="angularReports_"+Math.floor(9999*Math.random())+1}}}]),angularReports.addResizeEvent=function(a){var b=window.onresize;window.onresize=function(){a(),"function"==typeof b&&b()}},angularReports.directive("angularReports",["$compile","$http","$templateCache","$interval",function(a,b,c,d){function e(a){switch(a){case"bar":return"<svg  ng-height='{{svgHeight+offset.top+offset.bottom}}' ng-width='{{svgWidth+offset.left+offset.right}}'>                    <text class='title' ng-x='{{offset.left + svgWidth/2}}' ng-y='25'>{{title}}</text>                    <g class='grid' ng-transform='translate({{offset.left}},{{svgHeight+offset.bottom}})'>                        <line  ng-transform='translate({{$index*tickOffsetX}},0)'  ng-repeat='tick in ticksX' class='grid' ng-y1='0' ng-y2='-{{svgHeight}}'></line>                    </g>                    <g class='items'>                    <rect class='{{item.css}} i_{{$index}}' ng-repeat='item in itemData' ng-x='{{item.x}}'  ng-y='{{item.y}}' ng-height='{{item.height}}px' ng-width='{{item.width}}px'></rect>                    </g>                    <g class='axes'>                        <g class='axis yAxis' ng-transform='translate({{offset.left}},{{offset.top}})'>                            <line ng-y2='{{svgHeight}}'></line>                            <g class='tick c_{{data[$index][xAxis.values]}} i_{{$index}}' ng-transform='translate(-5,{{(svgHeight/data.length)*$index + (svgHeight/data.length/2)}})' ng-repeat='item in data'>                                <line class='bracket' ng-x1='5' ng-x2='5' ng-y1='-{{(svgHeight/data.length/2)}}' ng-y2='{{(svgHeight/data.length/2)}}'></line>                                <line ng-x2='5'></line>                                <text ng-y='2' ng-x='-3'>{{data[$index][yAxis.values]}}</text>                            </g>                        </g>                        <g class='axis xAxis' ng-transform='translate({{offset.left}},{{svgHeight+offset.bottom}})'>                            <line ng-x2='{{svgWidth}}'></line>                            <g class='tick' ng-transform='translate({{$index*tickOffsetX}},0)'  ng-repeat='tick in ticksX'>                                <line ng-y2='5'></line>                                <text ng-y='17'>{{tick.value}}</text>                            </g>                        </g>                    </g>                </svg>";case"column":return"<svg  ng-height='{{svgHeight+offset.top+offset.bottom}}' ng-width='{{svgWidth+offset.left+offset.right}}'>                    <text class='title' ng-x='{{offset.left + svgWidth/2}}' ng-y='25'>{{title}}</text>                    <g class='grid' ng-transform='translate({{offset.left}},{{offset.top}})'>                        <line ng-transform='translate(-5,{{$index*tickOffsetY}})'  ng-repeat='tick in ticksY' class='v_{{tick.value}} i_{{$index}}' ng-x1='6' ng-x2='{{svgWidth+6}}'></line>                    </g>                    <g class='items'>                        <rect class='{{item.css}} i_{{$index}}' ng-repeat='item in itemData' ng-x='{{item.x}}'  ng-y='{{item.y}}' ng-height='{{item.height}}px' ng-width='{{item.width}}px'></rect>                    </g>                    <g class='axes'>                        <g class='axis yAxis' ng-transform='translate({{offset.left}},{{offset.top}})'>                            <line ng-y2='{{svgHeight}}'></line>                            <g class='tick' ng-transform='translate(-5,{{$index*tickOffsetY}})'  ng-repeat='tick in ticksY'>                                <line ng-x2='5'></line>                                <text ng-y='5' ng-x='-3'>{{tick.value}}</text>                            </g>                        </g>                        <g class='axis xAxis' ng-transform='translate({{offset.left}},{{svgHeight+offset.bottom}})'>                            <line ng-x2='{{svgWidth}}'></line>                            <g class='tick c_{{data[$index][xAxis.values]}} i_{{$index}}' ng-transform='translate({{(svgWidth/data.length)*$index + (svgWidth/data.length/2)}},0)' ng-repeat='item in data'>                                <line class='bracket' ng-x1='-{{(svgWidth/data.length/2)}}' ng-x2='{{(svgWidth/data.length/2)}}'></line>                                <line ng-y2='5'></line>                                <text ng-y='17'>{{data[$index][xAxis.values]}}</text>                            </g>                        </g>                    </g>                </svg>"}}return{restrict:"A",replace:!0,transclude:!1,controller:function(a,b){function c(c){var d=c||b[0];f=a.margin,"string"==typeof f&&f.split(",").length>1?(f=f.split(","),a.offset={top:parseInt(f[0]),right:parseInt(f[1]),bottom:parseInt(f[2]),left:parseInt(f[3])}):("string"==typeof f||"number"==typeof f)&&(f=parseInt(f),a.offset={top:f,right:f,bottom:f,left:f}),g=d.offsetHeight||d.clientHeight||d.parentNode&&d.parentNode.clientHeight||0,h=d.offsetWidth||d.clientWidth||d.parentNode&&d.parentNode.clientWidth||0,g=g-a.offset.top-a.offset.bottom,h=h-a.offset.left-a.offset.right,a.svgHeight=g,a.svgWidth=h}function e(){switch(a.itemData=[],a.data.forEach(function(b){j.push(b[a.xAxis.values]),k.push(b[a.yAxis.values])}),q=Math.min.apply(null,k),p=Math.max.apply(null,k),q=q>0?0:q,n=Math.max.apply(null,j),o=Math.min.apply(null,j),o=o>0?0:o,v=Math.abs(Math.abs(o)>Math.abs(n)?o:n),0>o&&n>0?(w=2*v,x=.5*h,o=-1*v,n=v):(w=v,v=0,x=0),y=Math.abs(Math.abs(q)>Math.abs(p)?q:p),0>q&&p>0?(z=2*y,A=.5*g,q=-1*y,p=y):(z=y,y=0,A=g),rangeX=w,rangeY=z,a.type){case"column":l=h/a.data.length/a.series.length,a.data.forEach(function(b,c){a.series.forEach(function(d,e){var f=Math.abs(Math.round(b[d.values]/rangeY*g));a.itemData.push({height:f,width:l,x:l*c*a.series.length+e*l+a.offset.left,y:b[d.values]<0?a.offset.top+A:a.offset.top+A-f,css:"s_"+e+" c_"+b[a.xAxis.values]+" v_"+b[d.values]+(b[d.values]<0?" negative":" positive")})})});break;case"bar":m=g/a.data.length/a.series.length,a.data.forEach(function(b,c){a.series.forEach(function(d,e){var f=Math.round(Math.abs(b[d.values])/rangeX*h);a.itemData.push({height:m,width:f,x:b[d.values]<0?a.offset.left+h*(b[d.values]+v)/w:a.offset.left+x,y:m*c*a.series.length+e*m+a.offset.left,css:"s_"+e+" c_"+b[a.yAxis.values]+" v_"+b[d.values]+(b[d.values]<0?" negative":" positive")})})})}for(a.tickGapY=20,a.tickGapX=40,a.ticksY=[],a.ticksX=[],!a.tick.interval||isNaN(a.tick.interval)?(s=Math.round(g/a.tickGapY),r=Math.round(h/a.tickGapX)):(s=a.tick.interval,r=a.tick.interval),a.tickOffsetY=g/s,a.tickOffsetX=h/r,t=(p-q)/s,u=(n-o)/r,i=s;i>=0;i--){var b=q+t*i;a.ticksY.push({value:b})}for(i=0;i<=r;i++){var b=o+u*i;a.ticksX.push({value:b})}}a.data=a.$parent.angularReports.data,a.margin=parseInt(a.attr_margin||a.$parent.angularReports.margin),a.type=(a.attr_type||a.$parent.angularReports.type).toString(),a.title=(a.attr_title||a.$parent.angularReports.title).toString(),a.resize=a.attr_resize||a.$parent.angularReports.resize,"string"==typeof a.resize&&(a.resize="true"===a.resize),a.xAxis={values:(a.attr_xValues||a.$parent.angularReports.xAxis.values).toString()},a.yAxis={values:(a.attr_yValues||a.$parent.angularReports.yAxis.values).toString()},a.tick={interval:a.attr_tickInterval||a.$parent.angularReports.tick.interval},a.series=a.$parent.angularReports.series;var f=null,g=0,h=0,j=[],k=[],l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if(c(),a.$watch("data",function(a,b){void 0!==b&&void 0!==a&&e()},!0),a.resize){a.chartWidth=0,a.chartHeight=0;var B=!1;d(function(){angularReportsEl=angular.element(document.getElementById(a.chartId))[0];var b=angularReportsEl.offsetHeight||angularReportsEl.clientHeight||angularReportsEl.parentNode&&angularReportsEl.parentNode.clientHeight||0,d=angularReportsEl.offsetWidth||angularReportsEl.clientWidth||angularReportsEl.parentNode&&angularReportsEl.parentNode.clientWidth||0;b!=a.chartHeight||d!=a.chartWidth?(0!=a.chartHeight&&0!=a.chartWidth&&(B=!0),a.chartWidth=d,a.chartHeight=b):(1==B&&(c(angularReportsEl),e()),B=!1)},200)}},link:function(b,c){c.html(e(b.type)),c.replaceWith(a(c.html())(b))}}}]);